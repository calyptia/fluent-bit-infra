on:
  workflow_call:
    inputs:
      ignore_errors:
        description: Ignore errors on Terraform plan.
        type: boolean
        required: true
      aws_s3_bucket_releases:
        description: The S3 bucket to use for releases.
        type: string
        default: fluentbit-release
        required: false
      aws_s3_bucket_staging:
        description: The S3 bucket to use for staging builds.
        type: string
        default: fluentbit-staging
        required: false
      job_type:
        description: Whether to run Terrafrom apply or not - only if it is 'main'
        type: string
        default: pr
        required: true
      repo_full_name:
        description: Repository to use for Terraform, intended for testing only and include full name with organisation/user included.
        type: string
        default: "fluent/fluent-bit"
        required: false
    secrets:
      gcp_sa_key:
        required: true
      terraform_cloud_api_token:
        required: true
      cloudflare_token:
        required: true
      packet_net_token:
        required: true
      github_personal_access_token:
        required: true
      aws_s3_access_id_staging:
        required: true
      aws_s3_secret_access_key_staging:
        required: true
      gpg_private_key_staging:
        required: true

name: Reusable workflow to verify
jobs:
  run-tests:
    name: update fluentbit infra with terraform
    runs-on: ubuntu-latest
    env:
      ignore_errors: ${{ inputs.ignore_errors }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_hostname: 'app.terraform.io'
          cli_config_credentials_token: ${{ secrets.terraform_cloud_api_token }}

      - name: Replace the GCP service account key
        run: |
          sed -i -e '/gcp-sa-key/d' default.auto.tfvars
          cat <<EOT >> default.auto.tfvars
          gcp-sa-key    =  <<-EOF
          ${{ secrets.gcp_sa_key }}
          EOF
          EOT
        working-directory: terraform
        shell: bash

      - name: Replace the cloudflare token
        run: sed -i -e "s/\$CLOUDFLARE_TOKEN/${{ secrets.cloudflare_token }}/g" default.auto.tfvars
        working-directory: terraform
        shell: bash

      - name: Replace the packet.net token
        run: sed -i -e "s/\$PACKET_NET_TOKEN/${{ secrets.packet_net_token }}/g" default.auto.tfvars
        working-directory: terraform
        shell: bash

      - name: Replace the github.com token
        run: sed -i -e "s/\$GITHUB_TOKEN/${{ secrets.github_personal_access_token }}/g" default.auto.tfvars
        working-directory: terraform
        shell: bash

      - name: Set the staging secrets
        run: |
          sed -i -e "s/\$AWS_S3_BUCKET_STAGING/${{ inputs.aws_s3_bucket_staging }}/g" default.auto.tfvars
          sed -i -e "s/\$AWS_S3_ACCESS_ID_STAGING/${{ secrets.aws_s3_access_id_staging }}/g" default.auto.tfvars
          sed -i -e "s/\$AWS_S3_SECRET_ACCESS_KEY_STAGING/${{ secrets.aws_s3_secret_access_key_staging }}/g" default.auto.tfvars
        working-directory: terraform
        shell: bash

      - name: Set the multiline GPG key at the end
        run: |
          sed -i -e '/staging-gpg-key/d' default.auto.tfvars
          cat <<EOT >> default.auto.tfvars
          staging-gpg-key =  <<-EOF
          ${{ secrets.gpg_private_key_staging }}
          EOF
          EOT
        working-directory: terraform
        shell: bash

      - name: Set the release secrets
        run: |
          sed -i -e "s/\$AWS_S3_BUCKET_RELEASES/${{ inputs.aws_s3_bucket_releases }}/g" default.auto.tfvars
        working-directory: terraform
        shell: bash

      - name: Specify the repository to operate on.
        # Use different separator for sed as `/` may be in repo name
        run: |
          sed -i -e "s|\$REPO_FULL_NAME|${{ inputs.repo_full_name }}|g" default.auto.tfvars
        working-directory: terraform
        shell: bash

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: terraform

      - name: Terraform Init
        id: init
        run: terraform init
        working-directory: terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        working-directory: terraform
        continue-on-error: ${{ env.ignore_errors }}

      # Need to do this here to make sure we have the same configuration
      - name: Terraform Apply
        # Booleans do not compare
        if: ${{ inputs.job_type == 'apply' }}
        id: apply
        run: terraform apply -input=false -auto-approve
        working-directory: terraform

      - name: Terraform Apply skip reason
        if: ${{ inputs.job_type != 'apply' }}
        run: echo "Skipped because job_type is ${{ inputs.job_type }}"
