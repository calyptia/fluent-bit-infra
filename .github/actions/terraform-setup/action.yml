name: Composite action to set up Terraform credentials

inputs:
  aws_s3_bucket_releases:
    description: The S3 bucket to use for releases.
    default: fluentbit-release
    required: false
  aws_s3_bucket_staging:
    description: The S3 bucket to use for staging builds.
    default: fluentbit-staging
    required: false
  repo_full_name:
    description: Repository to use for Terraform, intended for testing only and include full name with organisation/user included.
    default: fluent/fluent-bit
    required: false
  terraform-api-host:
    description: Optionally override the Terraform API host to invoke.
    default: app.terraform.io
    required: false
  working-directory:
    description: Optionally override the directory to run all these commands in, i.e. where the Terraform files are.
    default: terraform
    required: false
  gcp_sa_key:
    description: The Terraform API token to use.
    required: true
  terraform_cloud_api_token:
    description: The Terraform API token to use.
    required: true
  cloudflare_token:
    description: The Cloudflare token to use.
    required: true
  metal_token:
    description: The Equinix token to use.
    required: true
  github_personal_access_token:
    description: The Github token to use.
    required: true
  aws_s3_access_id_staging:
    description: The AWS S3 access id for staging.
    required: true
  aws_s3_secret_access_key_staging:
    description: The AWS S3 secret access key for staging.
    required: true
  gpg_private_key_staging:
    description: The GPG private key for staging.
    required: true

runs:
  using: "composite"
  steps:
    - uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_hostname: ${{ inputs.terraform-api-host }}
        cli_config_credentials_token: ${{ inputs.terraform_cloud_api_token }}

    - name: Replace the GCP service account key
      run: |
        sed -i -e '/gcp-sa-key/d' default.auto.tfvars
        cat <<EOT >> default.auto.tfvars
        gcp-sa-key    =  <<-EOF
        ${{ inputs.gcp_sa_key }}
        EOF
        EOT
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Replace the cloudflare token
      run: sed -i -e "s/\$CLOUDFLARE_TOKEN/${{ inputs.cloudflare_token }}/g" default.auto.tfvars
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Replace the packet.net token
      run: sed -i -e "s/\$METAL_TOKEN/${{ inputs.metal_token }}/g" default.auto.tfvars
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Replace the github.com token
      run: sed -i -e "s/\$GITHUB_TOKEN/${{ inputs.github_personal_access_token }}/g" default.auto.tfvars
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Set the staging secrets
      run: |
        sed -i -e "s/\$AWS_S3_BUCKET_STAGING/${{ inputs.aws_s3_bucket_staging }}/g" default.auto.tfvars
        sed -i -e "s/\$AWS_S3_ACCESS_ID_STAGING/${{ inputs.aws_s3_access_id_staging }}/g" default.auto.tfvars
        sed -i -e "s/\$AWS_S3_SECRET_ACCESS_KEY_STAGING/${{ inputs.aws_s3_secret_access_key_staging }}/g" default.auto.tfvars
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Set the multiline GPG key at the end
      run: |
        sed -i -e '/staging-gpg-key/d' default.auto.tfvars
        cat <<EOT >> default.auto.tfvars
        staging-gpg-key =  <<-EOF
        ${{ inputs.gpg_private_key_staging }}
        EOF
        EOT
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Set the release secrets
      run: |
        sed -i -e "s/\$AWS_S3_BUCKET_RELEASES/${{ inputs.aws_s3_bucket_releases }}/g" default.auto.tfvars
      working-directory: ${{ inputs.working-directory }}
      shell: bash

    - name: Specify the repository to operate on.
      # Use different separator for sed as `/` may be in repo name
      run: |
        sed -i -e "s|\$REPO_FULL_NAME|${{ inputs.repo_full_name }}|g" default.auto.tfvars
      working-directory: ${{ inputs.working-directory }}
      shell: bash
